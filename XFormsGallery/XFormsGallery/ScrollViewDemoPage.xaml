<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
					   xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
					   x:Class="XFormsGallery.ScrollViewDemoPage">
	<StackLayout>
		<Label Text="ScrollView" Font="50" HorizontalOptions="Center"></Label>
		<ScrollView VerticalOptions="FillAndExpand" >
		<ScrollView.Content>
			<Label Font="Large">
				<Label.Text>
Sometimes page content fits entirely on the page. That's very convenient. But on many occasions, the content of the page is much too large for the page, or only becomes available at runtime.

For cases such as these, the ScrollView provides a solution. Simply set its Content property to your content \u2014 in this case a Label but in the general case very likely a Layout derivative with multiple children \u2014 and the ScrollView provides scrolling with the distinctive look and touch familiar to the user.

The ScrollView is also capable of horizontal scrolling, and while that's usually not as common as vertical scrolling, sometimes it comes in handy.

Most often, the content of a ScrollView is a StackLayout. Whenever you're using a StackLayout with a number of items determined only at runtime, you should probably put it in a StackLayout just to be sure your stuff doesn't go running off the bottom of the screen.
				</Label.Text>
			</Label>
		</ScrollView.Content>
		</ScrollView>
	</StackLayout>						
</ContentPage>